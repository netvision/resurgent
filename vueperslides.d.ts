/** Declaration file generated by dts-gen */

export = vueperslides;

declare const vueperslides: {
    VueperSlide: {
        beforeUnmount: any;
        computed: {
            conf: any;
            imageStyles: any;
            isNextSlide: any;
            isPreviousSlide: any;
            isSlideVisible: any;
            justDragged: any;
            slideClasses: any;
            slideFace3d: any;
            slideIndex: any;
            slideStyles: any;
            slidesCount: any;
            slidesList: any;
        };
        created: any;
        data: any;
        emits: string[];
        inject: string[];
        methods: {
            loadImage: any;
            updateThisSlide: any;
        };
        mounted: any;
        props: {
            clone: {
                default: boolean;
                type: any;
            };
            content: {
                default: string;
                type: any;
            };
            duration: {
                default: number;
                type: any;
            };
            image: {
                default: string;
                type: any;
            };
            lazyloaded: {
                default: boolean;
                type: any;
            };
            link: {
                default: string;
                type: any;
            };
            title: {
                default: string;
                type: any;
            };
        };
        render: any;
        watch: {
            content: any;
            image: any;
            lazyloaded: any;
            link: any;
            title: any;
        };
    };
    VueperSlides: {
        beforeUnmount: any;
        components: {
            VueperSlide: {
                beforeUnmount: any;
                computed: {
                    conf: any;
                    imageStyles: any;
                    isNextSlide: any;
                    isPreviousSlide: any;
                    isSlideVisible: any;
                    justDragged: any;
                    slideClasses: any;
                    slideFace3d: any;
                    slideIndex: any;
                    slideStyles: any;
                    slidesCount: any;
                    slidesList: any;
                };
                created: any;
                data: any;
                emits: string[];
                inject: string[];
                methods: {
                    loadImage: any;
                    updateThisSlide: any;
                };
                mounted: any;
                props: {
                    clone: {
                        default: boolean;
                        type: any;
                    };
                    content: {
                        default: string;
                        type: any;
                    };
                    duration: {
                        default: number;
                        type: any;
                    };
                    image: {
                        default: string;
                        type: any;
                    };
                    lazyloaded: {
                        default: boolean;
                        type: any;
                    };
                    link: {
                        default: string;
                        type: any;
                    };
                    title: {
                        default: string;
                        type: any;
                    };
                };
                render: any;
                watch: {
                    content: any;
                    image: any;
                    lazyloaded: any;
                    link: any;
                    title: any;
                };
            };
            vnodes: {
                render: any;
            };
        };
        computed: {
            arrowNextDisabled: any;
            arrowPrevDisabled: any;
            bulletIndexes: any;
            canSlide: any;
            conf: any;
            currentSlide: any;
            firstSlide: any;
            gapsCount: any;
            lastSlide: any;
            multipleSlides1by1: any;
            preferredPosition: any;
            slidePosAfterPreferred: any;
            slidesAfterCurrent: any;
            slidesCount: any;
            touchEnabled: {
                get: any;
                set: any;
            };
            trackInnerStyles: any;
            trackStyles: any;
            vueperslidesClasses: any;
            vueperslidesStyles: any;
        };
        data: any;
        emits: string[];
        methods: {
            addClone: any;
            addSlide: any;
            bindEvents: any;
            cancelSlideChange: any;
            emit: any;
            getBasicTranslation: any;
            getCurrentBreakpoint: any;
            getCurrentMouseX: any;
            getFirstVisibleSlide: any;
            getSlideData: any;
            getSlideInRange: any;
            getSlideshowOffsetTop: any;
            goToSlide: any;
            hasBreakpointChanged: any;
            init: any;
            justDragged: any;
            loadSlide: any;
            next: any;
            onMouseDown: any;
            onMouseIn: any;
            onMouseMove: any;
            onMouseOut: any;
            onMouseUp: any;
            onResize: any;
            onScroll: any;
            pauseAutoplay: any;
            previous: any;
            refreshParallax: any;
            removeEventListeners: any;
            removeSlide: any;
            resumeAutoplay: any;
            setBreakpointConfig: any;
            setBreakpointsList: any;
            toggleTouchableOption: any;
            updateSlide: any;
            updateTrackTranslation: any;
        };
        mounted: any;
        name: string;
        props: {
            "3d": {
                default: boolean;
                type: any;
            };
            alwaysRefreshClones: {
                default: boolean;
                type: any;
            };
            arrows: {
                default: boolean;
                type: any;
            };
            arrowsOutside: {
                default: any;
                type: any;
            };
            autoplay: {
                default: boolean;
                type: any;
            };
            breakpoints: {
                default: any;
                type: any;
            };
            bullets: {
                default: boolean;
                type: any;
            };
            bulletsOutside: {
                default: any;
                type: any;
            };
            disable: {
                default: boolean;
                type: any;
            };
            disableArrowsOnEdges: {
                default: boolean;
                type: any[];
            };
            draggingDistance: {
                default: any;
                type: any;
            };
            duration: {
                default: number;
                type: any[];
            };
            fade: {
                default: boolean;
                type: any;
            };
            fixedHeight: {
                default: boolean;
                type: any[];
            };
            fractions: {
                default: boolean;
                type: any;
            };
            gap: {
                default: number;
                type: any;
            };
            infinite: {
                default: boolean;
                type: any;
            };
            initSlide: {
                default: number;
                type: any;
            };
            lazy: {
                default: boolean;
                type: any;
            };
            lazyLoadOnDrag: {
                default: boolean;
                type: any;
            };
            pageScrollingElement: {
                default: string;
                type: any;
            };
            parallax: {
                default: boolean;
                type: any[];
            };
            parallaxFixedContent: {
                default: boolean;
                type: any;
            };
            pauseOnHover: {
                default: boolean;
                type: any;
            };
            preventYScroll: {
                default: boolean;
                type: any;
            };
            progress: {
                default: boolean;
                type: any;
            };
            slideContentOutside: {
                default: boolean;
                type: any[];
            };
            slideContentOutsideClass: {
                default: string;
                type: any;
            };
            slideImageInside: {
                default: boolean;
                type: any;
            };
            slideMultiple: {
                default: boolean;
                type: any[];
            };
            slideRatio: {
                default: number;
                type: any;
            };
            touchable: {
                default: boolean;
                type: any;
            };
            transitionSpeed: {
                default: number;
                type: any[];
            };
            visibleSlides: {
                default: number;
                type: any;
            };
        };
        provide: any;
        render: any;
    };
};

